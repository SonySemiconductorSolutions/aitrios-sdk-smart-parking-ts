"use strict";
/*
 * Copyright 2023 Sony Semiconductor Solutions Corp. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.GeneralObject = void 0;
var flatbuffers = require("flatbuffers");
var bounding_box_1 = require("./bounding-box");
var GeneralObject = /** @class */ (function () {
    function GeneralObject() {
        this.bb = null;
        this.bb_pos = 0;
    }
    GeneralObject.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    GeneralObject.getRootAsGeneralObject = function (bb, obj) {
        return (obj || new GeneralObject()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    GeneralObject.getSizePrefixedRootAsGeneralObject = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new GeneralObject()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    GeneralObject.prototype.classId = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
    };
    GeneralObject.prototype.boundingBoxType = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readUint8(this.bb_pos + offset) : bounding_box_1.BoundingBox.NONE;
    };
    GeneralObject.prototype.boundingBox = function (obj) {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
    };
    GeneralObject.prototype.score = function () {
        var offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
    };
    GeneralObject.startGeneralObject = function (builder) {
        builder.startObject(4);
    };
    GeneralObject.addClassId = function (builder, classId) {
        builder.addFieldInt32(0, classId, 0);
    };
    GeneralObject.addBoundingBoxType = function (builder, boundingBoxType) {
        builder.addFieldInt8(1, boundingBoxType, bounding_box_1.BoundingBox.NONE);
    };
    GeneralObject.addBoundingBox = function (builder, boundingBoxOffset) {
        builder.addFieldOffset(2, boundingBoxOffset, 0);
    };
    GeneralObject.addScore = function (builder, score) {
        builder.addFieldFloat32(3, score, 0.0);
    };
    GeneralObject.endGeneralObject = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    GeneralObject.createGeneralObject = function (builder, classId, boundingBoxType, boundingBoxOffset, score) {
        GeneralObject.startGeneralObject(builder);
        GeneralObject.addClassId(builder, classId);
        GeneralObject.addBoundingBoxType(builder, boundingBoxType);
        GeneralObject.addBoundingBox(builder, boundingBoxOffset);
        GeneralObject.addScore(builder, score);
        return GeneralObject.endGeneralObject(builder);
    };
    return GeneralObject;
}());
exports.GeneralObject = GeneralObject;
