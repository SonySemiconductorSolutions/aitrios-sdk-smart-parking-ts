"use strict";
/*
 * Copyright 2023 Sony Semiconductor Solutions Corp. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObjectDetectionData = void 0;
var flatbuffers = require("flatbuffers");
var general_object_1 = require("./general-object");
var ObjectDetectionData = /** @class */ (function () {
    function ObjectDetectionData() {
        this.bb = null;
        this.bb_pos = 0;
    }
    ObjectDetectionData.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    ObjectDetectionData.getRootAsObjectDetectionData = function (bb, obj) {
        return (obj || new ObjectDetectionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    ObjectDetectionData.getSizePrefixedRootAsObjectDetectionData = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new ObjectDetectionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    ObjectDetectionData.prototype.objectDetectionList = function (index, obj) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? (obj || new general_object_1.GeneralObject()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
    };
    ObjectDetectionData.prototype.objectDetectionListLength = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
    };
    ObjectDetectionData.startObjectDetectionData = function (builder) {
        builder.startObject(1);
    };
    ObjectDetectionData.addObjectDetectionList = function (builder, objectDetectionListOffset) {
        builder.addFieldOffset(0, objectDetectionListOffset, 0);
    };
    ObjectDetectionData.createObjectDetectionListVector = function (builder, data) {
        builder.startVector(4, data.length, 4);
        for (var i = data.length - 1; i >= 0; i--) {
            builder.addOffset(data[i]);
        }
        return builder.endVector();
    };
    ObjectDetectionData.startObjectDetectionListVector = function (builder, numElems) {
        builder.startVector(4, numElems, 4);
    };
    ObjectDetectionData.endObjectDetectionData = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    ObjectDetectionData.createObjectDetectionData = function (builder, objectDetectionListOffset) {
        ObjectDetectionData.startObjectDetectionData(builder);
        ObjectDetectionData.addObjectDetectionList(builder, objectDetectionListOffset);
        return ObjectDetectionData.endObjectDetectionData(builder);
    };
    return ObjectDetectionData;
}());
exports.ObjectDetectionData = ObjectDetectionData;
